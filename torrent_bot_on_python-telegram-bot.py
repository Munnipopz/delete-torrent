# -*- coding: utf-8 -*-

from telegram import InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import Updater, CommandHandler, CallbackQueryHandler, ConversationHandler
import logging
import re
import json

import config

from pprint import pprint

# Enable logging
logging.basicConfig(format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
                    level=logging.INFO)

logger = logging.getLogger(__name__)

cat_dict = 'categories_dict.json'

CATEGORY = None
SUBCATEGORY = None
QUERY = None
isRunning = False

# Stages
FIRST, SECOND, THIRD, FOURTH = range(4)

def start(update, context):
    """Send message with menu on `/start`."""
    # Get user that sent /start and log his name
    user = update.message.from_user
    bot = context.bot
    chat_id = update.message.chat.id
    logger.info("User %s started the conversation.", user.first_name)
    # Build InlineKeyboard where each button has a displayed text
    # and a string as callback_data
    # The keyboard is a list of button rows, where each row is in turn
    # a list (henc `[[...]]`).
    keyboard = [[InlineKeyboardButton('–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è', callback_data='–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è')],
                 [InlineKeyboardButton('–í—ã–±–æ—Ä –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ 1-58', callback_data='–í—ã–±–æ—Ä –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ 1-58')],
                 [InlineKeyboardButton('–í—ã–±–æ—Ä –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ 59-117', callback_data='–í—ã–±–æ—Ä –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ 59-117')],
                 [InlineKeyboardButton('–ü–æ–∏—Å–∫ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º', callback_data='–ü–æ–∏—Å–∫ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º')],
                 [InlineKeyboardButton('–ì–ª–æ–±–∞–ª—å–Ω—ã–π –ø–æ–∏—Å–∫', callback_data='–ì–ª–æ–±–∞–ª—å–Ω—ã–π –ø–æ–∏—Å–∫')]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    # Send message with text and appended InlineKeyboard
    # update.message.reply_text("–í—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç –≤ –º–µ–Ω—é", reply_markup=reply_markup)
    bot.sendMessage(chat_id, "–í—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç –≤ –º–µ–Ω—é", reply_markup=reply_markup)


def instruction(update, context):
    """Show instruction"""
    query = update.callback_query
    bot = context.bot
    chat_id = query.message.chat.id
    instruction = """
        –ú—ã –≤—Å–µ –ø—Ä–∏–≤—ã–∫–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —Å–∞–π—Ç–æ–º rutracker.org –∏ —Å–∫–∞—á–∏–≤–∞—Ç—å –æ—Ç—Ç—É–¥–∞ –º–Ω–æ–≥–æ –ø–æ–ª–µ–∑–Ω–æ–≥–æ –∏ –ø—Ä–∏—è—Ç–Ω–æ–≥–æ. \
        –ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –≤ –ø–æ—Å–ª–µ–¥–Ω–∏–µ –≥–æ–¥—ã –¥–æ—Å—Ç—É–ø –∫ –Ω–µ–º—É –æ–≥—Ä–∞–Ω–∏—á–µ–Ω. \
        –î–∞–Ω–Ω—ã–π –±–æ—Ç –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –¥–æ—Å—Ç—É–ø –∫ –∑–∞–≥—Ä—É–∑–∫–∞–º –∏–∑ –∞—Ä—Ö–∏–≤–æ–≤ 2014 –≥–æ–¥–∞. \
        –í –∫–∞—á–µ—Å—Ç–≤–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ —Å–≤–æ–µ–π —Ä–∞–±–æ—Ç—ã –æ–Ω –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é magnet-—Å—Å—ã–ª–∫—É, —Å –ø–æ–º–æ—â—å—é –∫–æ—Ç–æ—Ä–æ–π –º–æ–∂–Ω–æ —Ç–∞–∫ –∂–µ –∑–∞–ø—É—Å—Ç–∏—Ç—å –∑–∞–≥—Ä—É–∑–∫—É –Ω—É–∂–Ω–æ–≥–æ —Ñ–∞–π–ª–∞. \
        –û —Ç–æ–º –∫–∞–∫ —ç—Ç–æ —Å–¥–µ–ª–∞—Ç—å –ª—É—á—à–µ —á–∏—Ç–∞—Ç—å –≤ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–µ.\n
        –í—Å–µ —Ä–∞–∑–¥–∞—á–∏ –≤ —Ä—É—Ç—Ä–µ–∫–µ—Ä–µ –¥–µ–ª—è—Ç—Å—è –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º, –∫–æ—Ç–æ—Ä—ã–µ –≤ —Å–≤–æ—é –æ—á–µ—Ä–µ–¥—å –¥–µ–ª—è—Ç—Å—è –Ω–∞ –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–∏, –∑–∞ —Ä–µ–¥–∫–∏–º –∏—Å–∫–ª—é—á–µ–Ω–∏–µ–º. \
        –≠—Ç–æ –æ–±–ª–µ–≥—á–∞–µ—Ç –ø–æ–∏—Å–∫, —Ç.–∫. –≤—ã—á–µ—Ä–∫–∏–≤–∞–µ—Ç –∏–∑ –ø–æ–∏—Å–∫–∞ —Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏, –≤ –∫–æ—Ç–æ—Ä—ã—Ö —è–≤–Ω–æ –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç—Å—è –Ω—É–∂–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è. \
        –ö–∞—Ç–µ–≥–æ—Ä–∏–π –º–Ω–æ–≥–æ, –ø–æ—ç—Ç–æ–º—É –æ–Ω–∏ —Ä–∞–∑–±–∏—Ç—ã –Ω–∞ –¥–≤–µ –≥—Ä—É–ø–ø—ã. 
        –£–∂–µ –ø–æ—Å–ª–µ –≤—ã–±–æ—Ä–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞ –∑–∞–º–µ—Ç–Ω–æ —É–ª—É—á—à–∞—Ç—Å—è. –ù–æ —á—Ç–æ–±—ã –≤—ã–¥–∞—á–∞ –∏–¥–µ–∞–ª—å–Ω–æ –ø–æ–¥—Ö–æ–¥–∏–ª–∞ –≤–∞—à–∏–º –∑–∞–ø—Ä–æ—Å–∞–º \
        —Ç–∞–∫ –∂–µ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –≤—ã–±—Ä–∞—Ç—å –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏—é. –°–¥–µ–ª–∞—Ç—å —ç—Ç–æ —Ç–∞–∫ –∂–µ –º–æ–∂–Ω–æ –∏–∑ –º–µ–Ω—é. –ì–ª–∞–≤–Ω–æ–µ, —á—Ç–æ–±—ã \
        –ø–µ—Ä–µ–¥ –≤—ã–±–æ—Ä–æ–º –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –±—ã–ª–∞ –≤—ã–±—Ä–∞–Ω–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏—è. –ò–Ω–∞—á–µ –Ω–µ –¥–ª—è —á–µ–≥–æ –±—É–¥–µ—Ç –≤—ã–≤–æ–¥–∏—Ç—å –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏—é.\n
        –ü–æ—Å–ª–µ –≤—ã–±–æ—Ä–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏ –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –º–æ–∂–Ω–æ –æ—Å—É—â–µ—Å—Ç–≤–ª—è—Ç—å –ø–æ–∏—Å–∫ –ø–æ –Ω–∏–º. \
        –ö–∞–∫ –∏ –Ω–∞ —Å–∞–π—Ç–µ rutracker.org –ø–æ–∏—Å–∫ –º–æ–∂–Ω–æ –æ—Å—É—â–µ—Å—Ç–≤–ª—è—Ç—å –∞–¥—Ä–µ—Å–Ω—ã–π –∏–ª–∏ –≥–ª–æ–±–∞–ª—å–Ω—ã–π –ø–æ–∏—Å–∫. –î–ª—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –ø—Ä–µ–¥—É—Å–º–æ—Ç—Ä–µ–Ω —Ä–∞–∑–¥–µ–ª –≤ –º–µ–Ω—é.\n
        –ñ–µ–ª–∞–µ–º –Ω–∞–π—Ç–∏ –≤—Å–µ!
        """
    keyboard = [[InlineKeyboardButton('–í—ã–±–æ—Ä –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ 1-58', callback_data='–í—ã–±–æ—Ä –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ 1-58')],
                [InlineKeyboardButton('–í—ã–±–æ—Ä –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ 59-117', callback_data='–í—ã–±–æ—Ä –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ 59-117')],
                [InlineKeyboardButton('–ü–æ–∏—Å–∫ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º', callback_data='–ü–æ–∏—Å–∫ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º')],
                [InlineKeyboardButton('–ì–ª–æ–±–∞–ª—å–Ω—ã–π –ø–æ–∏—Å–∫', callback_data='–ì–ª–æ–±–∞–ª—å–Ω—ã–π –ø–æ–∏—Å–∫')],
                [InlineKeyboardButton('–ú–µ–Ω—é', callback_data='m')]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    # Send message with text and appended InlineKeyboard
    bot.sendMessage(chat_id, instruction, reply_markup=reply_markup)


def menu(update, context):
    query = update.callback_query
    bot = context.bot
    chat_id = query.message.chat.id
    keyboard = [[InlineKeyboardButton('–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è', callback_data='–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è')],
                [InlineKeyboardButton('–í—ã–±–æ—Ä –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ 1-58', callback_data='–í—ã–±–æ—Ä –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ 1-58')],
                [InlineKeyboardButton('–í—ã–±–æ—Ä –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ 59-117', callback_data='–í—ã–±–æ—Ä –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ 59-117')],
                [InlineKeyboardButton('–ü–æ–∏—Å–∫ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º', callback_data='–ü–æ–∏—Å–∫ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º')],
                [InlineKeyboardButton('–ì–ª–æ–±–∞–ª—å–Ω—ã–π –ø–æ–∏—Å–∫', callback_data='–ì–ª–æ–±–∞–ª—å–Ω—ã–π –ø–æ–∏—Å–∫')]
                ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    # Send message with text and appended InlineKeyboard
    bot.sendMessage(chat_id, '–í—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç –≤ –º–µ–Ω—é', reply_markup=reply_markup)



def first_categories(update, context):
    query = update.callback_query
    bot = context.bot
    chat_id = query.message.chat.id

    keyboard = [[InlineKeyboardButton('Rutracker Awards (–º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è –∏ –∫–æ–Ω–∫—É—Ä—Å—ã)', callback_data='0')],
                 [InlineKeyboardButton('–ó–∞—Ä—É–±–µ–∂–Ω–æ–µ –∫–∏–Ω–æ', callback_data='1')],
                 [InlineKeyboardButton('–ù–∞—à–µ –∫–∏–Ω–æ', callback_data='2')],
                 [InlineKeyboardButton('–ê—Ä—Ç-—Ö–∞—É—Å –∏ –∞–≤—Ç–æ—Ä—Å–∫–æ–µ –∫–∏–Ω–æ', callback_data='3')],
                 [InlineKeyboardButton('–¢–µ–∞—Ç—Ä', callback_data='4')],
                 [InlineKeyboardButton('DVD Video', callback_data='5')],
                 [InlineKeyboardButton('HD Video', callback_data='6')],
                 [InlineKeyboardButton('3D/–°—Ç–µ—Ä–µ–æ –ö–∏–Ω–æ, –í–∏–¥–µ–æ, TV –∏ –°–ø–æ—Ä—Ç', callback_data='7')],
                 [InlineKeyboardButton('–ú—É–ª—å—Ç—Ñ–∏–ª—å–º—ã', callback_data='8')],
                 [InlineKeyboardButton('–ú—É–ª—å—Ç—Å–µ—Ä–∏–∞–ª—ã', callback_data='9')],
                 [InlineKeyboardButton('–ê–Ω–∏–º–µ', callback_data='10')],
                 [InlineKeyboardButton('–†—É—Å—Å–∫–∏–µ —Å–µ—Ä–∏–∞–ª—ã', callback_data='11')],
                 [InlineKeyboardButton('–ó–∞—Ä—É–±–µ–∂–Ω—ã–µ —Å–µ—Ä–∏–∞–ª—ã', callback_data='12')],
                 [InlineKeyboardButton('–ó–∞—Ä—É–±–µ–∂–Ω—ã–µ —Å–µ—Ä–∏–∞–ª—ã (HD Video)', callback_data='13')],
                 [InlineKeyboardButton('–°–µ—Ä–∏–∞–ª—ã –õ–∞—Ç–∏–Ω—Å–∫–æ–π –ê–º–µ—Ä–∏–∫–∏, –¢—É—Ä—Ü–∏–∏ –∏ –ò–Ω–¥–∏–∏', callback_data='14')],
                 [InlineKeyboardButton('–ê–∑–∏–∞—Ç—Å–∫–∏–µ —Å–µ—Ä–∏–∞–ª—ã', callback_data='15')],
                 [InlineKeyboardButton('–í–µ—Ä–∞ –∏ —Ä–µ–ª–∏–≥–∏—è', callback_data='16')],
                 [InlineKeyboardButton('–î–æ–∫—É–º–µ–Ω—Ç–∞–ª—å–Ω—ã–µ —Ñ–∏–ª—å–º—ã –∏ —Ç–µ–ª–µ–ø–µ—Ä–µ–¥–∞—á–∏', callback_data='17')],
                 [InlineKeyboardButton('–î–æ–∫—É–º–µ–Ω—Ç–∞–ª—å–Ω—ã–µ (HD Video)', callback_data='18')],
                 [InlineKeyboardButton('–†–∞–∑–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω—ã–µ —Ç–µ–ª–µ–ø–µ—Ä–µ–¥–∞—á–∏ –∏ —à–æ—É, –ø—Ä–∏–∫–æ–ª—ã –∏ —é–º–æ—Ä', callback_data='19')],
                 [InlineKeyboardButton('–ó–∏–º–Ω–∏–µ –û–ª–∏–º–ø–∏–π—Å–∫–∏–µ –∏–≥—Ä—ã 2018', callback_data='20')],
                 [InlineKeyboardButton('–°–ø–æ—Ä—Ç–∏–≤–Ω—ã–µ —Ç—É—Ä–Ω–∏—Ä—ã, —Ñ–∏–ª—å–º—ã –∏ –ø–µ—Ä–µ–¥–∞—á–∏', callback_data='21')],
                 [InlineKeyboardButton('‚öΩ –§—É—Ç–±–æ–ª', callback_data='22')],
                 [InlineKeyboardButton('üèÄ –ë–∞—Å–∫–µ—Ç–±–æ–ª', callback_data='23')],
                 [InlineKeyboardButton('üèí –•–æ–∫–∫–µ–π', callback_data='24')],
                 [InlineKeyboardButton('–†–µ—Å—Ç–ª–∏–Ω–≥', callback_data='25')],
                 [InlineKeyboardButton('–°–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ, –æ–±—Ä–∞–±–æ—Ç–∫–∞ —Å–∫–∞–Ω–æ–≤', callback_data='26')],
                 [InlineKeyboardButton('–ö–Ω–∏–≥–∏ –∏ –∂—É—Ä–Ω–∞–ª—ã (–æ–±—â–∏–π —Ä–∞–∑–¥–µ–ª)', callback_data='27')],
                 [InlineKeyboardButton('–î–ª—è –¥–µ—Ç–µ–π, —Ä–æ–¥–∏—Ç–µ–ª–µ–π –∏ —É—á–∏—Ç–µ–ª–µ–π', callback_data='28')],
                 [InlineKeyboardButton('–°–ø–æ—Ä—Ç, —Ñ–∏–∑–∏—á–µ—Å–∫–∞—è –∫—É–ª—å—Ç—É—Ä–∞, –±–æ–µ–≤—ã–µ –∏—Å–∫—É—Å—Å—Ç–≤–∞', callback_data='29')],
                 [InlineKeyboardButton('–ì—É–º–∞–Ω–∏—Ç–∞—Ä–Ω—ã–µ –Ω–∞—É–∫–∏', callback_data='30')],
                 [InlineKeyboardButton('–ò—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–µ –Ω–∞—É–∫–∏', callback_data='31')],
                 [InlineKeyboardButton('–¢–æ—á–Ω—ã–µ, –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –∏ –∏–Ω–∂–µ–Ω–µ—Ä–Ω—ã–µ –Ω–∞—É–∫–∏', callback_data='32')],
                 [InlineKeyboardButton('–ù–æ—Ç—ã –∏ –ú—É–∑—ã–∫–∞–ª—å–Ω–∞—è –ª–∏—Ç–µ—Ä–∞—Ç—É—Ä–∞', callback_data='33')],
                 [InlineKeyboardButton('–í–æ–µ–Ω–Ω–æ–µ –¥–µ–ª–æ', callback_data='34')],
                 [InlineKeyboardButton('–ü—Å–∏—Ö–æ–ª–æ–≥–∏—è', callback_data='35')],
                 [InlineKeyboardButton('–ö–æ–ª–ª–µ–∫—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ, —É–≤–ª–µ—á–µ–Ω–∏—è –∏ —Ö–æ–±–±–∏', callback_data='36')],
                 [InlineKeyboardButton('–•—É–¥–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω–∞—è –ª–∏—Ç–µ—Ä–∞—Ç—É—Ä–∞', callback_data='37')],
                 [InlineKeyboardButton('–ö–æ–º–ø—å—é—Ç–µ—Ä–Ω–∞—è –ª–∏—Ç–µ—Ä–∞—Ç—É—Ä–∞', callback_data='38')],
                 [InlineKeyboardButton('–ö–æ–º–∏–∫—Å—ã, –º–∞–Ω–≥–∞, —Ä–∞–Ω–æ–±—ç', callback_data='39')],
                 [InlineKeyboardButton('–ö–æ–ª–ª–µ–∫—Ü–∏–∏ –∫–Ω–∏–≥ –∏ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏', callback_data='40')],
                 [InlineKeyboardButton('–ú—É–ª—å—Ç–∏–º–µ–¥–∏–π–Ω—ã–µ –∏ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–µ –∏–∑–¥–∞–Ω–∏—è', callback_data='41')],
                 [InlineKeyboardButton('–ú–µ–¥–∏—Ü–∏–Ω–∞ –∏ –∑–¥–æ—Ä–æ–≤—å–µ', callback_data='42')],
                 [InlineKeyboardButton('–ò–Ω–æ—Å—Ç—Ä–∞–Ω–Ω—ã–µ —è–∑—ã–∫–∏ –¥–ª—è –≤–∑—Ä–æ—Å–ª—ã—Ö', callback_data='43')],
                 [InlineKeyboardButton('–ò–Ω–æ—Å—Ç—Ä–∞–Ω–Ω—ã–µ —è–∑—ã–∫–∏ –¥–ª—è –¥–µ—Ç–µ–π', callback_data='44')],
                 [InlineKeyboardButton('–•—É–¥–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω–∞—è –ª–∏—Ç–µ—Ä–∞—Ç—É—Ä–∞ (–∏–Ω.—è–∑—ã–∫–∏)', callback_data='45')],
                 [InlineKeyboardButton('–ê—É–¥–∏–æ–∫–Ω–∏–≥–∏ –Ω–∞ –∏–Ω–æ—Å—Ç—Ä–∞–Ω–Ω—ã—Ö —è–∑—ã–∫–∞—Ö', callback_data='46')],
                 [InlineKeyboardButton('–í–∏–¥–µ–æ—É—Ä–æ–∫–∏ –∏ –æ–±—É—á–∞—é—â–∏–µ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–µ DVD', callback_data='47')],
                 [InlineKeyboardButton('–ë–æ–µ–≤—ã–µ –∏—Å–∫—É—Å—Å—Ç–≤–∞ (–í–∏–¥–µ–æ—É—Ä–æ–∫–∏)', callback_data='48')],
                 [InlineKeyboardButton('–ö–æ–º–ø—å—é—Ç–µ—Ä–Ω—ã–µ –≤–∏–¥–µ–æ—É—Ä–æ–∫–∏ –∏ –æ–±—É—á–∞—é—â–∏–µ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–µ DVD', callback_data='49')],
                 [InlineKeyboardButton('–†–∞–¥–∏–æ—Å–ø–µ–∫—Ç–∞–∫–ª–∏, –∏—Å—Ç–æ—Ä–∏—è, –º–µ–º—É–∞—Ä—ã', callback_data='50')],
                 [InlineKeyboardButton('–§–∞–Ω—Ç–∞—Å—Ç–∏–∫–∞, —Ñ—ç–Ω—Ç–µ–∑–∏, –º–∏—Å—Ç–∏–∫–∞, —É–∂–∞—Å—ã, —Ñ–∞–Ω—Ñ–∏–∫–∏', callback_data='51')],
                 [InlineKeyboardButton('–†–µ–ª–∏–≥–∏–∏', callback_data='52')],
                 [InlineKeyboardButton('–ü—Ä–æ—á–∞—è –ª–∏—Ç–µ—Ä–∞—Ç—É—Ä–∞', callback_data='53')],
                 [InlineKeyboardButton('–†–µ–º–æ–Ω—Ç –∏ —ç–∫—Å–ø–ª—É–∞—Ç–∞—Ü–∏—è —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–Ω—ã—Ö —Å—Ä–µ–¥—Å—Ç–≤', callback_data='54')],
                 [InlineKeyboardButton('–§–∏–ª—å–º—ã –∏ –ø–µ—Ä–µ–¥–∞—á–∏ –ø–æ –∞–≤—Ç–æ/–º–æ—Ç–æ', callback_data='55')],
                 [InlineKeyboardButton('–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∞—è –∏ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–∞—è –∞–∫–∞–¥–µ–º–∏—á–µ—Å–∫–∞—è –º—É–∑—ã–∫–∞', callback_data='56')],
                 [InlineKeyboardButton('–§–æ–ª—å–∫–ª–æ—Ä, –ù–∞—Ä–æ–¥–Ω–∞—è –∏ –≠—Ç–Ω–∏—á–µ—Å–∫–∞—è –º—É–∑—ã–∫–∞', callback_data='57')],
                 [InlineKeyboardButton('New Age, Relax, Meditative & Flamenco', callback_data='58')],
                 [InlineKeyboardButton('–ï—â–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏', callback_data='e1')],
                 [InlineKeyboardButton('–ú–µ–Ω—é', callback_data='m')],
                ]

    reply_markup = InlineKeyboardMarkup(keyboard)
    # Send message with text and appended InlineKeyboard
    bot.sendMessage(chat_id, '–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é', reply_markup=reply_markup)


def second_categories(update, context):
    query = update.callback_query
    bot = context.bot
    chat_id = query.message.chat.id

    keyboard = [[InlineKeyboardButton('–†—ç–ø, –•–∏–ø-–•–æ–ø, R\'n\'B', callback_data='59')],
                 [InlineKeyboardButton('Reggae, Ska, Dub', callback_data='60')],
                 [InlineKeyboardButton('–°–∞—É–Ω–¥—Ç—Ä–µ–∫–∏, –∫–∞—Ä–∞–æ–∫–µ –∏ –º—é–∑–∏–∫–ª—ã', callback_data='61')],
                 [InlineKeyboardButton('–®–∞–Ω—Å–æ–Ω, –ê–≤—Ç–æ—Ä—Å–∫–∞—è –∏ –í–æ–µ–Ω–Ω–∞—è –ø–µ—Å–Ω—è', callback_data='62')],
                 [InlineKeyboardButton('–ú—É–∑—ã–∫–∞ –¥—Ä—É–≥–∏—Ö –∂–∞–Ω—Ä–æ–≤', callback_data='63')],
                 [InlineKeyboardButton('–û—Ç–µ—á–µ—Å—Ç–≤–µ–Ω–Ω–∞—è –ø–æ–ø-–º—É–∑—ã–∫–∞', callback_data='64')],
                 [InlineKeyboardButton('–ó–∞—Ä—É–±–µ–∂–Ω–∞—è –ø–æ–ø-–º—É–∑—ã–∫–∞', callback_data='65')],
                 [InlineKeyboardButton('Eurodance, Disco, Hi-NRG', callback_data='66')],
                 [InlineKeyboardButton('–í–∏–¥–µ–æ, DVD Video, HD Video (–ø–æ–ø-–º—É–∑—ã–∫–∞)', callback_data='67')],
                 [InlineKeyboardButton('–ó–∞—Ä—É–±–µ–∂–Ω—ã–π –¥–∂–∞–∑', callback_data='68')],
                 [InlineKeyboardButton('–ó–∞—Ä—É–±–µ–∂–Ω—ã–π –±–ª—é–∑', callback_data='69')],
                 [InlineKeyboardButton('–û—Ç–µ—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–π –¥–∂–∞–∑ –∏ –±–ª—é–∑', callback_data='70')],
                 [InlineKeyboardButton('–í–∏–¥–µ–æ, DVD Video, HD Video (–î–∂–∞–∑ –∏ –±–ª—é–∑)', callback_data='71')],
                 [InlineKeyboardButton('–ó–∞—Ä—É–±–µ–∂–Ω—ã–π Rock', callback_data='72')],
                 [InlineKeyboardButton('–ó–∞—Ä—É–±–µ–∂–Ω—ã–π Metal', callback_data='73')],
                 [InlineKeyboardButton('–ó–∞—Ä—É–±–µ–∂–Ω—ã–µ Alternative, Punk, Independent', callback_data='74')],
                 [InlineKeyboardButton('–û—Ç–µ—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–π Rock, Metal', callback_data='75')],
                 [InlineKeyboardButton('–í–∏–¥–µ–æ, DVD Video, HD Video (–†–æ–∫-–º—É–∑—ã–∫–∞)', callback_data='76')],
                 [InlineKeyboardButton('Trance, Goa Trance, Psy-Trance, PsyChill, Ambient, Dub', callback_data='77')],
                 [InlineKeyboardButton('House, Techno, Hardcore, Hardstyle, Jumpstyle', callback_data='78')],
                 [InlineKeyboardButton('Drum & Bass, Jungle, Breakbeat, Dubstep, IDM, Electro', callback_data='79')],
                 [InlineKeyboardButton('Chillout, Lounge, Downtempo, Trip-Hop', callback_data='80')],
                 [InlineKeyboardButton('Traditional Electronic, Ambient, Modern Classical, Electroacoustic, Ex..', callback_data='81')],
                 [InlineKeyboardButton('Industrial, Noise, EBM, Dark Electro, Aggrotech, Synthpop, New Wave', callback_data='82')],
                 [InlineKeyboardButton('Label Packs (lossless)', callback_data='83')],
                 [InlineKeyboardButton('Label packs, Scene packs (lossy)', callback_data='84')],
                 [InlineKeyboardButton('–≠–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∞—è –º—É–∑—ã–∫–∞ (–í–∏–¥–µ–æ, DVD Video, HD Video)', callback_data='85')],
                 [InlineKeyboardButton('Hi-Res stereo –∏ –º–Ω–æ–≥–æ–∫–∞–Ω–∞–ª—å–Ω–∞—è –º—É–∑—ã–∫–∞', callback_data='86')],
                 [InlineKeyboardButton('–û—Ü–∏—Ñ—Ä–æ–≤–∫–∏ —Å –∞–Ω–∞–ª–æ–≥–æ–≤—ã—Ö –Ω–æ—Å–∏—Ç–µ–ª–µ–π', callback_data='87')],
                 [InlineKeyboardButton('–ù–µ–æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–µ –∫–æ–Ω–≤–µ—Ä—Å–∏–∏ —Ü–∏—Ñ—Ä–æ–≤—ã—Ö —Ñ–æ—Ä–º–∞—Ç–æ–≤', callback_data='88')],
                 [InlineKeyboardButton('–ò–≥—Ä—ã –¥–ª—è Windows', callback_data='89')],
                 [InlineKeyboardButton('–ü—Ä–æ—á–µ–µ –¥–ª—è Windows-–∏–≥—Ä', callback_data='90')],
                 [InlineKeyboardButton('–ü—Ä–æ—á–µ–µ –¥–ª—è Microsoft Flight Simulator, Prepar3D, X-Plane', callback_data='91')],
                 [InlineKeyboardButton('–ò–≥—Ä—ã –¥–ª—è Macintosh', callback_data='92')],
                 [InlineKeyboardButton('–ò–≥—Ä—ã –¥–ª—è Linux', callback_data='93')],
                 [InlineKeyboardButton('–ò–≥—Ä—ã –¥–ª—è –∫–æ–Ω—Å–æ–ª–µ–π', callback_data='94')],
                 [InlineKeyboardButton('–í–∏–¥–µ–æ –¥–ª—è –∫–æ–Ω—Å–æ–ª–µ–π', callback_data='95')],
                 [InlineKeyboardButton('–ò–≥—Ä—ã –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤', callback_data='96')],
                 [InlineKeyboardButton('–ò–≥—Ä–æ–≤–æ–µ –≤–∏–¥–µ–æ', callback_data='97')],
                 [InlineKeyboardButton('–û–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ —Å–∏—Å—Ç–µ–º—ã –æ—Ç Microsoft', callback_data='98')],
                 [InlineKeyboardButton('Linux, Unix –∏ –¥—Ä—É–≥–∏–µ –û–°', callback_data='99')],
                 [InlineKeyboardButton('–¢–µ—Å—Ç–æ–≤—ã–µ –¥–∏—Å–∫–∏ –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∞—É–¥–∏–æ/–≤–∏–¥–µ–æ –∞–ø–ø–∞—Ä–∞—Ç—É—Ä—ã', callback_data='100')],
                 [InlineKeyboardButton('–°–∏—Å—Ç–µ–º–Ω—ã–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã', callback_data='101')],
                 [InlineKeyboardButton('–°–∏—Å—Ç–µ–º—ã –¥–ª—è –±–∏–∑–Ω–µ—Å–∞, –æ—Ñ–∏—Å–∞, –Ω–∞—É—á–Ω–æ–π –∏ –ø—Ä–æ–µ–∫—Ç–Ω–æ–π —Ä–∞–±–æ—Ç—ã', callback_data='102')],
                 [InlineKeyboardButton('–í–µ–±-—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –∏ –ü—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ', callback_data='103')],
                 [InlineKeyboardButton('–ü—Ä–æ–≥—Ä–∞–º–º—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –º—É–ª—å—Ç–∏–º–µ–¥–∏–∞ –∏ 3D', callback_data='104')],
                 [InlineKeyboardButton('–ú–∞—Ç–µ—Ä–∏–∞–ª—ã –¥–ª—è –º—É–ª—å—Ç–∏–º–µ–¥–∏–∞ –∏ –¥–∏–∑–∞–π–Ω–∞', callback_data='105')],
                 [InlineKeyboardButton('–ì–ò–°, —Å–∏—Å—Ç–µ–º—ã –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –∏ –∫–∞—Ä—Ç—ã', callback_data='106')],
                 [InlineKeyboardButton('–ü—Ä–∏–ª–æ–∂–µ–Ω–∏—è –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤', callback_data='107')],
                 [InlineKeyboardButton('–í–∏–¥–µ–æ –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤', callback_data='108')],
                 [InlineKeyboardButton('Apple Macintosh', callback_data='109')],
                 [InlineKeyboardButton('iOS', callback_data='110')],
                 [InlineKeyboardButton('–í–∏–¥–µ–æ', callback_data='111')],
                 [InlineKeyboardButton('–í–∏–¥–µ–æ HD', callback_data='112')],
                 [InlineKeyboardButton('–ê—É–¥–∏–æ', callback_data='113')],
                 [InlineKeyboardButton('–†–∞–∑–Ω–æ–µ (—Ä–∞–∑–¥–∞—á–∏)', callback_data='114')],
                 [InlineKeyboardButton('–¢–µ—Å—Ç–æ–≤—ã–π —Ñ–æ—Ä—É–º', callback_data='115')],
                 [InlineKeyboardButton('–ï—â–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏', callback_data='e2')],
                 [InlineKeyboardButton('–ú–µ–Ω—é', callback_data='m')]
                ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    # Send message with text and appended InlineKeyboard
    bot.sendMessage(chat_id, '–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é', reply_markup=reply_markup)


def choose_handler(update, context):
    global CATEGORY

    with open(cat_dict, 'r', encoding='utf-8') as dict:
        d = json.load(dict)
        ctgs = [x for i, x in enumerate(d)]

    bot = context.bot
    chat_id = update.callback_query.message.chat.id
    data = update.callback_query.data

    if int(data) in list(range(117)):
        CATEGORY = ctgs[int(data)]
        bot.sendMessage(chat_id, '–í—ã–±—Ä–∞–Ω–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏—è: {}'.format(CATEGORY))
        subcategory(update, context)


def subcategory(update, context):
    global SUBCATEGORY
    bot = context.bot
    chat_id = update.callback_query.message.chat.id

    no_subcategory_text = """–°–ø–µ—Ä–≤–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤—ã–±—Ä–∞—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é. –°–¥–µ–ª–∞—Ç—å —ç—Ç–æ –º–æ–∂–Ω–æ –≤ –º–µ–Ω—é"""

    subcategory_choose_text = """–ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è—é –≤–∞—Å –Ω–∞ –≤—ã–±–æ—Ä –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–∏. –û–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ, —á—Ç–æ –≤ –∫–∞–∂–¥–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ \
    —Å–≤–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–π. –í –Ω–µ–∫–æ—Ç–æ—Ä—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏—è—Ö –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–π –Ω–µ—Ç."""
    if CATEGORY == None:
        bot.sendMessage(chat_id, no_subcategory_text)
        menu(update, context)

    with open(cat_dict, 'r', encoding='utf-8') as dictionary:
        d = json.load(dictionary)
        ctgs = [x for i, x in enumerate(d)]
        subcategories = d[CATEGORY]
        if len(subcategories) == 0:
            SUBCATEGORY = None
            text = """–£ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ ({}) –Ω–µ—Ç –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–π. –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è—é –≤–∞—Å –Ω–∞ –∞–¥—Ä–µ—Å–Ω—ã–π –ø–æ–∏—Å–∫."""
            bot.sendMessage(chat_id, text)
            target_search(update, context)

        keyboard = []

        # for sbct in subcategories:
        #     clean_sbct = sbct.replace("'", "\'")
        #     clbk = '{}-{}'.format(ctgs.index(CATEGORY), subcategories.index(sbct))
        #     keyboard.append([InlineKeyboardButton(clean_sbct, callback_data=clbk)])
        # keyboard.append([InlineKeyboardButton('–ù–∞–∑–∞–¥', callback_data='back')])

        bot.sendMessage(chat_id, '–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏—é: ', reply_markup=keyboard)
        target_search(update, context)


def target_search(update, context):
    bot = context.bot
    chat_id = update.callback_query.message.chat.id
    bot.sendMessage(chat_id, '–ó–¥–µ—Å—å –±—É–¥–µ—Ç —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω –∞–¥—Ä–µ—Å–Ω—ã–π –ø–æ–∏—Å–∫')


def global_search(update, context):
    bot = context.bot
    chat_id = update.callback_query.message.chat.id
    bot.sendMessage(chat_id, '–ó–¥–µ—Å—å –±—É–¥–µ—Ç —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω –≥–ª–æ–±–∞–ª—å–Ω—ã–π –ø–æ–∏—Å–∫')


def error(update, context):
    """Log Errors caused by Updates."""
    logger.warning('Update "%s" caused error "%s"', update, context.error)


def main():
    # Create the Updater and pass it your bot's token.
    updater = Updater(config.token, use_context=True)

    # Get the dispatcher to register handlers
    dp = updater.dispatcher

    # Setup conversation handler with the states FIRST and SECOND
    # Use the pattern parameter to pass CallbackQueryies with specific
    # data pattern to the corresponding handlers.
    # ^ means "start of line/string"
    # $ means "end of line/string"
    # So ^ABC$ will only allow 'ABC'



    # Add conversationhandler to dispatcher it will be used for handling
    # updates
    dp.add_handler(CommandHandler('start', start))
    dp.add_handler(CallbackQueryHandler(instruction, pattern='–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è'))
    dp.add_handler(CallbackQueryHandler(first_categories, pattern='–í—ã–±–æ—Ä –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ 1-58'))
    dp.add_handler(CallbackQueryHandler(second_categories, pattern='–í—ã–±–æ—Ä –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ 59-117'))
    dp.add_handler(CallbackQueryHandler(menu, pattern='m'))
    dp.add_handler(CallbackQueryHandler(choose_handler, pattern=re.compile('\d')))


    # log all errors
    dp.add_error_handler(error)

    # Start the Bot
    updater.start_polling()

    # Run the bot until you press Ctrl-C or the process receives SIGINT,
    # SIGTERM or SIGABRT. This should be used most of the time, since
    # start_polling() is non-blocking and will stop the bot gracefully.
    updater.idle()


if __name__ == '__main__':
    main()